name: Code Quality & Tests Cases/Coverage

on: [push]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.9"]
    services:
      postgres:
        image: postgres:11
        env:
          POSTGRES_USER: postgres
          POSTGRES_DB: pytest_test
          POSTGRES_PASSWORD: postgres
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python3 -m pip install pip pipenv --upgrade
        pipenv install --dev --deploy --skip-lock
    - name: Analysing the code with black
      run: |
        pipenv run blacken
    - name: Analysing the code with isort
      run: |
        pipenv run pisort
    - name: Run Test Case
      run: |
        pipenv run tests
      env:
        SQLALCHEMY_DATABASE_TESTING_URI: postgresql://postgres:postgres@localhost:5432/pytest_test
        APP_SECRET_KEY : ${{secrets.APP_SECRET_KEY}}
        APP_DEBUG : true
        APP_ENV : development
        FLASK_APP : run
        FLASK_ENV : development
        API_TITLE : My application API
        API_DESCRIPTION : API DESCRIPTION GOES HERE
        API_VERSION : v1.0
        MAIL_SERVER : ${{secrets.MAIL_SERVER}}
        MAIL_USE_TLS : false
        MAIL_PORT : 2525
        MAIL_USE_SSL : false
        MAIL_DEBUG : 1
        MAIL_USERNAME : ${{secrets.MAIL_USERNAME}}
        MAIL_PASSWORD : ${{secrets.MAIL_PASSWORD}}
        APP_ENCRYPTION_KEY : ${{secrets.APP_ENCRYPTION_KEY}}
        MAIL_DEFAULT_SENDER : no-reply@example.com
        SQLALCHEMY_DATABASE_URI : postgresql://postgres:postgres@localhost:5432/pytest_test

